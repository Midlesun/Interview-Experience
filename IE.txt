1.HashMap 和ArrayList的实现，装填因子0.75 以及各种问题
2.MySQL的索引
   利用的B+树做索引
2. 为什么用 B+ 树做索引而不用哈希表做索引?

哈希表是把索引字段映射成对应的哈希码然后再存放在对应的位置，这样的话，如果我们要进行模糊查找的话，显然哈希表这种结构是不支持的，只能遍历这个表。而B+树则可以通过最左前缀原则快速找到对应的数据。
如果我们要进行范围查找，例如查找ID为100 ~ 400的人，哈希表同样不支持，只能遍历全表。
索引字段通过哈希映射成哈希码，如果很多字段都刚好映射到相同值的哈希码的话，那么形成的索引结构将会是一条很长的链表，这样的话，查找的时间就会大大增加。
3 String、StringBuffer、StringBuilder的区别
   1）如果要操作少量的数据用 String；不可变序列，会重新创建String对象

（2）多线程操作字符串缓冲区下操作大量数据 StringBuffer；线程安全

（3）单线程操作字符串缓冲区下操作大量数据 StringBuilder。线程不安全
4 重载和重写
5 二叉树遍历
6 Mysql如何实现快速查找，索引，索引的实现，提高效率的原因
7 SSM框架所有相关内容 
8 SpringMVC SpringBoot Mybatis
9 JAVA高级知识 JDK、GC、JVM、IO和NIO，AIO、锁、线程
10.HashMap 的扩容加载因子为0.75  当元素个数超过了容量长度的0.75倍时，进行扩容。而且hashMap的容量必须为2的幂。
   HashMap 底层数据结构为数组+链表。 会发生哈希冲突（即不同K值有相同的hashCode）,在比较equals方法发现不同时，会在这个hashcode的数组位置生成一个单链表，用于存储。
   当哈希表中的条目数超出了加载因子与当前容量的乘积时，通过调用 rehash 方法将容量翻倍。
   HashMap不是线程安全的，如果想要线程安全的HashMap，可以通过Collections类的静态方法synchronizedMap获得线程安全的HashMap。